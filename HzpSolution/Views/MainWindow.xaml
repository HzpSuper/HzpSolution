<Window x:Class="HzpSolution.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:HzpSolution"
        xmlns:behaviors ="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:materialDesign="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:avalonDock="clr-namespace:AvalonDock;assembly=AvalonDock"
        xmlns:avalonDockLayout="clr-namespace:AvalonDock.Layout;assembly=AvalonDock"
        Height="600" Width="800"  MinHeight="600" MinWidth="800" WindowStyle="None"  WindowStartupLocation="CenterScreen"  ResizeMode="NoResize"   MouseDown="Window_MouseDown"  >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Resources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <local:MessageIndexConverter x:Key="MyMessageIndexConverter"/>
            <Style  TargetType="{x:Type ToolTip}" BasedOn ="{StaticResource  MaterialDesignToolTip}">
                <Setter Property="Placement" Value="Center"/>
                <Setter Property = "VerticalOffset" Value="35"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <materialDesign:DialogHost   Identifier="RootDialog" DialogTheme="Inherit">
        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}" >
            <materialDesign:DrawerHost.Style>
                <Style TargetType="materialDesign:DrawerHost" BasedOn="{StaticResource {x:Type materialDesign:DrawerHost}}">
                    <Setter Property="OverlayBackground" Value="{DynamicResource PrimaryHueMidBrush}" />
                </Style>
            </materialDesign:DrawerHost.Style>

            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <DockPanel DockPanel.Dock="Top">
                        <Button Content="{materialDesign:PackIcon Kind= AccountCircle, Size=36}"  Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"  DockPanel.Dock="Left" HorizontalAlignment="Left" Margin="20"/>
                        <ToggleButton  Style="{StaticResource MaterialDesignHamburgerToggleButton}"  DockPanel.Dock="Right"  HorizontalAlignment="Right"  Margin="20"
                        IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"/>
                    </DockPanel>

                    <TextBox 
                        x:Name="ModuleItemsSearchBox"
                        Text="{Binding SearchKeyword, UpdateSourceTrigger=PropertyChanged}"
                        DockPanel.Dock="Top"
                        Margin="20, 4"
                        Width="200"
                        materialDesign:HintAssist.Hint="检索"
                        materialDesign:HintAssist.IsFloating="True"
                        materialDesign:TextFieldAssist.HasClearButton="True"
                        materialDesign:TextFieldAssist.HasOutlinedTextField="True"
                        materialDesign:TextFieldAssist.DecorationVisibility="Collapsed"
                        materialDesign:TextFieldAssist.TextFieldCornerRadius="4"/>
                    
                    <ScrollViewer x:Name="scrolls" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" >
                        <ScrollViewer.Resources>
                            <Style TargetType="ScrollBar" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}"/>
                        </ScrollViewer.Resources>
                        <ScrollViewer.Content>
                            <TreeView x:Name="Menutree" ItemsSource="{Binding MenuTreeNodes}"  Margin="8,16,20,0" >
                                <TreeView.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding ChildMenuNodes}">
                                        <StackPanel Orientation="Horizontal"  VerticalAlignment="Center">
                                            <materialDesign:PackIcon Kind="{Binding  Icon}" Width="25" Height="25"/>
                                            <Label Content="{Binding MenuName}" FontSize="16" Margin="4,0,0,0"/>
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                </TreeView.ItemTemplate>
                                <TreeView.ItemContainerStyle>
                                    <Style TargetType="TreeViewItem"  BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                                        <Setter Property="IsExpanded" Value="True" />
                                        <Setter Property="Visibility" Value="{Binding Visible}"/>
                                    </Style>
                                </TreeView.ItemContainerStyle>
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="SelectedItemChanged" >
                                        <behaviors:InvokeCommandAction  Command="{Binding NavigateCommand}" CommandParameter="{Binding  SelectedItem,ElementName=Menutree}"/>
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </TreeView>
                       <!--<StackPanel Margin="0,8,0,0" >
                        <Expander HorizontalAlignment="Stretch" Header="视图" Foreground="{DynamicResource PrimaryHueMidBrush}" FontWeight="Bold">
                            <ListBox Foreground="{DynamicResource PrimaryHueMidBrush}" FontWeight="Bold"  FontSize="20" Margin="24,0,24,0">
                                 <ListBoxItem>运动</ListBoxItem>
                                <ListBoxItem>视觉</ListBoxItem>
                                <ListBoxItem>Blue</ListBoxItem>
                                <ListBoxItem>Gray</ListBoxItem>
                                <ListBoxItem>LightGray</ListBoxItem>
                                <ListBoxItem>Red</ListBoxItem>
                            </ListBox>
                        </Expander>
                        <Expander HorizontalAlignment="Stretch" Header="设置" Foreground="{DynamicResource PrimaryHueMidBrush}" FontWeight="Bold">
                           <ListBox Foreground="{DynamicResource PrimaryHueMidBrush}" FontWeight="Bold"  FontSize="20" Margin="24,0,24,0">
                                <ListBoxItem>运动</ListBoxItem>
                                <ListBoxItem>视觉</ListBoxItem>
                                <ListBoxItem>Blue</ListBoxItem>
                                <ListBoxItem>Gray</ListBoxItem>
                                <ListBoxItem>LightGray</ListBoxItem>
                                <ListBoxItem>Red</ListBoxItem>
                           </ListBox>
                        </Expander>
                    </StackPanel>-->
                        </ScrollViewer.Content>
                    </ScrollViewer>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <Grid x:Name="MainGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="2"/>
                    <RowDefinition Height="100"/>
                </Grid.RowDefinitions>
                <materialDesign:ColorZone  Mode="PrimaryLight" Grid.Row="0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel  Orientation="Horizontal" Grid.Column="0" >
                            <ToggleButton  x:Name="MenuToggleButton" ToolTip="菜单" Cursor="Hand"  IsChecked="{Binding IsOpenMenu}" Click="MenuToggleButton_Click"  >
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <StackPanel  Orientation="Horizontal">
                                                        <Image Source="/Resources/Logo.jpg" Margin="3,3,3,3"/>
                                                        <TextBlock Text=" Super Hzp"  VerticalAlignment="Center" Foreground="White" Width="150" FontSize="20" />
                                                    </StackPanel>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"  HorizontalAlignment="Right" Grid.Column="1">
                            <Button x:Name="MinWindow" Foreground="White" Style="{StaticResource MaterialDesignFlatButton}" ToolTip="最小化" Content="{materialDesign:PackIcon MinusThick}" Click="MinWindow_Click"/>
                            <Button x:Name="MaxWindow" Foreground="White" Style="{StaticResource MaterialDesignFlatButton}"  RenderTransformOrigin="0.5,0.5"     Click="MaxWindow_Click"  >
                                <Button.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="180"/>
                                    </TransformGroup>
                                </Button.RenderTransform>
                                <Button.ToolTip>
                                    <ToolTip x:Name="MaxWindowToolTip" Content="向下还原"  Placement="Center" VerticalOffset="-35"/>
                                </Button.ToolTip>
                                <Button.Content>
                                    <materialDesign:PackIcon x:Name="MaxWindowPackion" Kind="ImageFilterNone"/>
                                </Button.Content>
                            </Button>
                            <Button x:Name="CloseWindow" Foreground="White" Style="{StaticResource MaterialDesignFlatButton}" ToolTip="关闭" Content="{materialDesign:PackIcon CloseThick}" Click="CloseWindow_Click" />
                        </StackPanel>
                    </Grid>
                </materialDesign:ColorZone>
                <materialDesign:ColorZone  Mode="PrimaryLight" Grid.Row="1">
                    <ToolBarTray   Background="Transparent">
                        <ToolBar  Height="35" Style="{DynamicResource MaterialDesignToolBar}"  ClipToBounds="False" Loaded="ToolBar_Loaded" Background="Transparent" >

                            <Button   ToolTip="向后导航"   Content="{materialDesign:PackIcon Kind=ArrowLeftBoldCircle}"  Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black"   Command="{Binding NavigateGobackCommand}"/>
                            <Button   ToolTip="向前导航"   Content="{materialDesign:PackIcon Kind=ArrowRightBoldCircle}"  Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black"  Command="{Binding NavigateGoForwardCommand}"/>
                            <Separator Background="Black" />
                            <Button   ToolTip="新建"  Content="{materialDesign:PackIcon Kind=FolderPlus}"   Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black" Click="Button_Click" />
                            <Button   ToolTip="打开"  Content="{materialDesign:PackIcon Kind=FolderOpen}"   Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black" />
                            <Button   ToolTip="保存"  Content="{materialDesign:PackIcon Kind=ContentSave}"  Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black" />
                            <Separator Background="Black" />
                            <Button   ToolTip="撤销"   Content="{materialDesign:PackIcon Kind=ArrowULeftTopBold}"  Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black"  Command="{Binding NavigateCommand}" CommandParameter="Palette" />
                            <Button   ToolTip="重做"   Content="{materialDesign:PackIcon Kind=ArrowURightTopBold}"  Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black"  />
                            <Separator  Background="Black"/>
                            <CheckBox x:Name="OpenMessageModul"  Content="消息栏"   IsChecked="True" Click="OpenMessageModul_Click" />
                            <Button Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black"  ToolTip="Take a nap" Height="35" ToolBar.OverflowMode="Always"  Content="{materialDesign:PackIcon Kind=Hotel}" />
                            <RadioButton  GroupName="XXX" Content="Radio" />
                            <RadioButton GroupName="XXX"  Content="Ga Ga" />
                            <Separator />
                            <RadioButton  GroupName="YYY"  Style="{DynamicResource MaterialDesignToolRadioButton}" Content="{materialDesign:PackIcon Kind=Radio}" />
                            <RadioButton GroupName="YYY"  Style="{DynamicResource MaterialDesignToolRadioButton}" Content="{materialDesign:PackIcon Kind=EmoticonPoop}" />
                        </ToolBar>
                    </ToolBarTray >
                </materialDesign:ColorZone>
                <avalonDock:DockingManager x:Name="DockManager"  Grid.Row="2"
                                   prism:RegionManager.RegionName="{x:Static local:Constants.MainRegion}"
                                   DocumentTitleTemplate="{StaticResource DocumentTitleTemplate}"
                                   AnchorableTitleTemplate="{StaticResource AnchorableTitleTemplate}"
                                   DocumentHeaderTemplate="{StaticResource DocumentHeaderTemplate}"
                                   AnchorableHeaderTemplate="{StaticResource AnchorableHeaderTemplate}"
                                   DocumentPaneMenuItemHeaderTemplate="{StaticResource DocumentHeaderTemplate}">
                    <avalonDockLayout:LayoutRoot x:Name="_layoutRoot">
                        <avalonDockLayout:LayoutPanel  Orientation="Vertical" >
                            <avalonDockLayout:LayoutDocumentPane />
                            <avalonDockLayout:LayoutAnchorablePane />
                        </avalonDockLayout:LayoutPanel>
                    </avalonDockLayout:LayoutRoot>
                </avalonDock:DockingManager>
                <GridSplitter Grid.Row="3"  HorizontalAlignment="Stretch" />
                <Grid Grid.Row="4">
                    <Border BorderBrush="{DynamicResource {x:Static SystemColors.AppWorkspaceBrushKey}}" BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="25"/>
                            </Grid.RowDefinitions>
                            <ListBox  ItemsSource="{Binding MessageDatasShow}"  Grid.Row="0" FontSize="14" >
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock  Width="30" Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={StaticResource MyMessageIndexConverter}}"/>
                                            <TextBlock  Width="100" Text="{Binding MessageTime ,StringFormat='{}{0:HH:mm:ss fff}'}"/>
                                            <TextBlock  Text="{Binding MessageContext}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <ItemsControl ItemsSource="{Binding MessageDatas}" Grid.Row="1">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate    DataType="{x:Type local:MessageData}">
                                        <Border  x:Name="Border" Margin="5,0,5,0">
                                            <materialDesign:Badged BadgeColorZoneMode="PrimaryDark" Badge="{Binding Numeric}" >
                                                <Button  x:Name="ChangeButton" Height="25"  Style="{StaticResource MaterialDesignFlatButton}" Content="{Binding Name}"
                                                  Command="{Binding  DataContext.MessageSwitchoverCommand , RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" CommandParameter="{Binding Messagelevel}"      />
                                            </materialDesign:Badged>
                                        </Border>
                                        <DataTemplate.Triggers>
                                            <DataTrigger    Binding="{Binding IsSelected}"  Value="False">
                                                <Setter    TargetName="Border"   Property="Background"    Value="{DynamicResource MaterialDesignSelection}" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Border>
                </Grid>
            </Grid>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
