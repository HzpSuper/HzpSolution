<Window x:Class="HzpSolution.Views.LoginView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
        xmlns:prism="http://prismlibrary.com/"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:c="clr-namespace:HzpSolution.Common"
        xmlns:local="clr-namespace:HzpSolution.Views"
        mc:Ignorable="d"
        Title="LoginView" x:Name="Login" Height="700" Width="800"  WindowStartupLocation="CenterScreen" WindowStyle="None" ResizeMode="NoResize" Opacity="1"  AllowsTransparency="True" Loaded="Login_Loaded" MouseDown="Login_MouseDown">
    <Window.Background>
        <SolidColorBrush Opacity="0"/>
    </Window.Background>
    <Window.Resources>
        <SolidColorBrush x:Key="LoginForeground" Color="#FFA847F7" />
        <c:MultiParamterConverter x:Key="MultiparamterConverter"/>
        <Style  TargetType="{x:Type ToolTip}" BasedOn ="{StaticResource  MaterialDesignToolTip}">
            <Setter Property="Placement" Value="Center"/>
            <Setter Property = "VerticalOffset" Value="35"/>
        </Style>

        <!--旋转出来样例-->
        <Storyboard x:Key="showDW">
            <DoubleAnimation Storyboard.TargetName="CanvasMain"
                        Storyboard.TargetProperty="Opacity"
                        From="0.2" To="1" Duration="0:0:1.5">
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="CanvasMain"
                        Storyboard.TargetProperty="RenderTransform.Children[1].Angle"
                        From="180" To="0" Duration="0:0:1" >
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="CanvasMain"
                        Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"
                        From="0" To="1" Duration="0:0:1" 
                        AccelerationRatio="1">
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="CanvasMain"
                        Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY"
                        From="0" To="1" Duration="0:0:1" 
                        AccelerationRatio="1">
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="CanvasMain"
                        Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"
                        To="0.95" BeginTime="0:0:1" Duration="0:0:0.1" 
                        DecelerationRatio="1">
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="CanvasMain"
                        Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY"
                        To="0.95" BeginTime="0:0:1" Duration="0:0:0.1" 
                        DecelerationRatio="1">
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="CanvasMain"
                        Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"
                        To="1" BeginTime="0:0:1.1" Duration="0:0:0.2"  
                        AccelerationRatio="1">
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="CanvasMain"              
                        Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY"
                        To="1" BeginTime="0:0:1.1" Duration="0:0:0.2" 
                        AccelerationRatio="1">
            </DoubleAnimation>
        </Storyboard>
        <!--旋转回去样例-->
        <Storyboard x:Key="closeDW">
            <DoubleAnimation Storyboard.TargetName="CanvasMain" 
                      Storyboard.TargetProperty="RenderTransform.Children[1].Angle"
                      BeginTime="0:0:0" To="-360" Duration="0:0:1" >
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="CanvasMain" 
                      Storyboard.TargetProperty="Opacity"
                      BeginTime="0:0:0" To="0.3" Duration="0:0:1">
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="CanvasMain" 
                      Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"
                      BeginTime="0:0:0"  To="0" Duration="0:0:1" AccelerationRatio="1">
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="CanvasMain"
                      Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY"
                      BeginTime="0:0:0"  To="0" Duration="0:0:1" AccelerationRatio="1">
            </DoubleAnimation>
        </Storyboard>

    </Window.Resources>
    <Window.Triggers>
        <EventTrigger SourceName="Login" RoutedEvent="Window.Loaded">
            <BeginStoryboard Name="showQueryCanvasStoryboard" 
                      Storyboard="{StaticResource showDW}">
            </BeginStoryboard>
        </EventTrigger>

        <EventTrigger SourceName="CloseWindow" RoutedEvent="Button.Click">
            <BeginStoryboard Name="closeQueryCanvasStoryboard" 
                      Storyboard="{StaticResource closeDW}">
            </BeginStoryboard>
        </EventTrigger>


    </Window.Triggers>
    <Canvas  Height="380" Width="490"  Name="CanvasMain" >
        <Canvas.Background>
            <RadialGradientBrush GradientOrigin="0.5,0" Center="0.5,0.3" RadiusX="0.7">
                <GradientStop Color="#FF04040E" Offset="0"/>
                <GradientStop Color="#FF24315D" Offset="1"/>
            </RadialGradientBrush>
        </Canvas.Background>
        <Canvas.RenderTransform>
            <TransformGroup>
                <ScaleTransform CenterX="50" CenterY="50"></ScaleTransform>
                <RotateTransform CenterX="200" CenterY="250"></RotateTransform>
            </TransformGroup>
        </Canvas.RenderTransform>
        <Grid>
            <StackPanel>
                <Grid >
                    <Grid   Height="380" Width="490"   Name="grid_lineContainer"/>
                    <Canvas Height="380" Width="490"  Name="cvs_starContainer"/>
                    <Grid>
                        <Button x:Name="CloseWindow" Foreground="{StaticResource  LoginForeground}" Style="{StaticResource MaterialDesignFlatButton}" ToolTip="关闭" Content="{materialDesign:PackIcon CloseThick}" HorizontalAlignment="Right" VerticalAlignment="Top" Click="CloseWindow_Click"/>
                        <Button x:Name="MinWindow"   Foreground="{StaticResource  LoginForeground}" Style="{StaticResource MaterialDesignFlatButton}" ToolTip="最小化" Content="{materialDesign:PackIcon MinusThick}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 0 40 0" Click="MinWindow_Click"/>
                        <Button  Height="80" Width="80"  Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0 60 0 0">
                            <Image Source="/Resources/Logo.jpg" Margin="-1"/>
                        </Button>
                        <materialDesign:PackIcon  Width="30" Height="30" Foreground="{StaticResource  LoginForeground}" Kind="Account"  Grid.Row="0"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,210,10" />
                        <ComboBox IsEnabled="{Binding UserNameChange}"  FontSize="20"   Foreground="{StaticResource  LoginForeground}" materialDesign:HintAssist.Hint="用户"  Text="{Binding UserName , UpdateSourceTrigger = PropertyChanged}"  ItemsSource="{Binding Users}"    Width="200" IsEditable="True"   HorizontalAlignment="Center" VerticalAlignment="Center" Margin="40,0,0,10">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Height="120"/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>

                        <materialDesign:Flipper  x:Name="flipper" Height="160" Width="240" Margin="0,190,0,0" IsFlipped ="{Binding Flip}">
                            <materialDesign:Flipper.FrontContent>
                                <Grid Height="160" Width="240">
                                    <materialDesign:PackIcon  Width="20" Height="25" Foreground="{StaticResource  LoginForeground}" Kind="Key"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,170,130" />
                                    <PasswordBox  c:PasswordHelper.Password="{Binding Password , Mode=TwoWay}" c:PasswordHelper.Attch="True"  FontSize="16"  Foreground="{StaticResource  LoginForeground}" materialDesign:HintAssist.Hint="密码"   HorizontalAlignment="Center" VerticalAlignment="Center" Width="160" Margin="30,0,0,130"/>
                                    <CheckBox IsChecked="{Binding Rememberpassword}"  Foreground="{StaticResource  LoginForeground}" Content="记住密码" Style="{StaticResource MaterialDesignLightCheckBox}"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,110,50" />
                                    <CheckBox IsChecked="{Binding Modifypassword}"  Foreground="{StaticResource  LoginForeground}" Content="修改密码" Style="{StaticResource MaterialDesignLightCheckBox}"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="90,0,0,50" />
                                    <Button Width="200" Command="{Binding LoginCommand}" Content="登录" Foreground="{StaticResource  LoginForeground}" FontSize="20" Style="{StaticResource MaterialDesignFlatButton }" Margin="0,20,0,0">
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource MultiparamterConverter}">
                                                <Binding RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                <Binding ElementName="SnackBar"/>
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                    </Button>
                                </Grid>
                            </materialDesign:Flipper.FrontContent>
                            <materialDesign:Flipper.BackContent>
                                <Grid Height="160" Width="240">
                                    <materialDesign:PackIcon  Width="20" Height="25" Foreground="{StaticResource  LoginForeground}" Kind="KeyStar"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,170,130" />
                                    <PasswordBox  c:PasswordHelper.Password="{Binding Newpassword , Mode=TwoWay}" c:PasswordHelper.Attch="True"  FontSize="16"  Foreground="{StaticResource  LoginForeground}" materialDesign:HintAssist.Hint="新密码"    HorizontalAlignment="Center" VerticalAlignment="Center" Width="160" Margin="30,0,0,130"/>
                                    <materialDesign:PackIcon  Width="20" Height="25" Foreground="{StaticResource  LoginForeground}" Kind="KeyChange"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,170,50" />
                                    <PasswordBox  c:PasswordHelper.Password="{Binding Confirmpassword , Mode=TwoWay}" c:PasswordHelper.Attch="True"  FontSize="16"  Foreground="{StaticResource  LoginForeground}" materialDesign:HintAssist.Hint="确认密码"   HorizontalAlignment="Center" VerticalAlignment="Center" Width="160" Margin="30,0,0,50"/>
                                    <Button Width="200" Command="{Binding ChangePasswordCommand}" CommandParameter="{Binding ElementName=SnackBar}" Content="确认" Foreground="{StaticResource  LoginForeground}" FontSize="20" Style="{StaticResource MaterialDesignFlatButton }" Margin="0,20,0,0"  />
                                </Grid>
                            </materialDesign:Flipper.BackContent>
                        </materialDesign:Flipper>

                    </Grid>
                </Grid>
                <materialDesign:Snackbar x:Name="SnackBar" MessageQueue="{materialDesign:MessageQueue}" VerticalContentAlignment="Center"  HorizontalAlignment="Stretch"/>
            </StackPanel>
        </Grid>
    </Canvas>
</Window>
